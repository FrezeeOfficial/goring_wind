{"ast":null,"code":"var _jsxFileName = \"G:\\\\JS\\\\goring_wind\\\\frontend\\\\src\\\\components\\\\HomeContent\\\\HomeContent.js\";\nimport React, { Component } from 'react';\nimport './HomeContent.css';\nimport InteractiveWeather from './InteractiveWeather';\nimport WindCard from './WindCard';\nimport TideCard from './TideCard';\nimport Failure from '../Failure'; // not used yet\n// import GenericDialog from '../../modals/genericDialog';\n\nclass HomeContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wind: null,\n      isLoaded: null,\n      tide: null\n    };\n  }\n\n  componentDidMount() {\n    this.getTideData();\n    this.getWindData(); // auto refress wind data\n\n    setInterval(this.getWindData.bind(this), 5000);\n  }\n\n  getWindData() {\n    const t_wind = [];\n    const xhr = new XMLHttpRequest();\n\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        var data = JSON.parse(xhr.response);\n        data = data.res;\n\n        for (var i = 0; i < data.length; i++) {\n          t_wind.push({\n            name: data[i].name,\n            location: data[i].location,\n            distance: data[i].distance,\n            speed: data[i].speed,\n            direction: data[i].direction,\n            position: [data[i].lat, data[i].long],\n            key: data[i].key\n          });\n        }\n\n        this.setState({\n          wind: t_wind,\n          isLoaded: true\n        });\n      } else {// failed\n      }\n    };\n\n    xhr.open('POST', 'http://192.168.1.3:5000/weather/getCurrent?type=wind');\n    xhr.send();\n  }\n\n  getTideData() {\n    const t_tide = [];\n    const xhr = new XMLHttpRequest();\n\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        var data = JSON.parse(xhr.response);\n        data = data.res;\n        this.setState({\n          tide: data\n        });\n      } else {// failed\n      }\n    };\n\n    xhr.open('POST', 'http://192.168.1.5:5000/weather/getCurrent?type=tide');\n    xhr.send();\n  }\n\n  render() {\n    if (this.state.isLoaded) {\n      var _this$state = this.state,\n          wind = _this$state.wind,\n          tide = _this$state.tide;\n      var Cards = wind.map(row => {\n        return React.createElement(WindCard, {\n          StationName: row.name,\n          StationLocation: row.location,\n          StationDistance: row.distance,\n          CurrentSpeed: row.speed,\n          Direction: row.direction,\n          key: row.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"main\", {\n        id: \"layout-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Failure, {\n        code: \"0x00\",\n        message: \"could not connect to servers\",\n        display: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-container content-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"INTERACTIVE WEATHER\"), React.createElement(\"div\", {\n        className: \"colour-card blue pale-blue-shadow full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(InteractiveWeather, {\n        wind: wind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"grid-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-padding full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"WIND\"), React.createElement(\"div\", {\n        className: \"full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, Cards))), React.createElement(\"div\", {\n        className: \"grid-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-padding full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"TIDE\"), React.createElement(\"div\", {\n        className: \"colour-card orange full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \" Coming soon... \")))))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"error-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"error-modal-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"oops-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Oops,\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Something went wrong. Try again?\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"TRY AGAIN\")));\n    }\n  }\n\n}\n\nexport default HomeContent;","map":{"version":3,"sources":["G:/JS/goring_wind/frontend/src/components/HomeContent/HomeContent.js"],"names":["React","Component","InteractiveWeather","WindCard","TideCard","Failure","HomeContent","constructor","props","state","wind","isLoaded","tide","componentDidMount","getTideData","getWindData","setInterval","bind","t_wind","xhr","XMLHttpRequest","onload","status","data","JSON","parse","response","res","i","length","push","name","location","distance","speed","direction","position","lat","long","key","setState","open","send","t_tide","render","Cards","map","row"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './HomeContent.css'\r\n\r\n\r\nimport InteractiveWeather from './InteractiveWeather';\r\nimport WindCard from './WindCard';\r\nimport TideCard from './TideCard';\r\nimport Failure from '../Failure';\r\n// not used yet\r\n// import GenericDialog from '../../modals/genericDialog';\r\n\r\nclass HomeContent extends Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        wind: null,\r\n        isLoaded: null,\r\n        tide: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {  \r\n        \r\n        this.getTideData();     \r\n        this.getWindData();\r\n\r\n        // auto refress wind data\r\n        setInterval(this.getWindData.bind(this), 5000);\r\n\r\n    }\r\n\r\n    getWindData() {\r\n    const t_wind = [];\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    xhr.onload = () => {\r\n        if (xhr.status === 200) {\r\n            var data = JSON.parse(xhr.response);\r\n            data = data.res;\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n                t_wind.push({\r\n                    name: data[i].name,\r\n                    location: data[i].location,\r\n                    distance: data[i].distance,\r\n                    speed: data[i].speed,\r\n                    direction: data[i].direction,\r\n                    position: [\r\n                        data[i].lat, data[i].long\r\n                    ],\r\n                    key: data[i].key\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                wind: t_wind,\r\n                isLoaded: true\r\n            });\r\n\r\n        } else {\r\n            // failed\r\n        }\r\n    };\r\n\r\n    xhr.open('POST', 'http://192.168.1.3:5000/weather/getCurrent?type=wind');\r\n\r\n    xhr.send();\r\n    }\r\n\r\n    getTideData() {\r\n        const t_tide = [];\r\n        const xhr = new XMLHttpRequest();\r\n    \r\n        xhr.onload = () => {\r\n            if (xhr.status === 200) {\r\n                var data = JSON.parse(xhr.response);\r\n                data = data.res;\r\n    \r\n                this.setState({\r\n                    tide: data\r\n                })\r\n    \r\n            } else {\r\n                // failed\r\n            }\r\n        };\r\n    \r\n        xhr.open('POST', 'http://192.168.1.5:5000/weather/getCurrent?type=tide');\r\n    \r\n        xhr.send();\r\n    }\r\n\r\n    render(){\r\n        if (this.state.isLoaded) {    \r\n            var { wind ,tide} = this.state\r\n\r\n            var Cards = (                                    \r\n                wind.map((row) => {\r\n                    return (<WindCard StationName={row.name} StationLocation={row.location} StationDistance={row.distance} CurrentSpeed={row.speed} Direction={row.direction} key={row.key}/>)\r\n                })\r\n            )\r\n\r\n\r\n        return (\r\n                    <main id=\"layout-container\">\r\n                                            <Failure code=\"0x00\" message=\"could not connect to servers\" display=\"true\"/>\r\n                        <div id=\"content\">\r\n                            <div className=\"grid-container content-container\">\r\n                                <div className=\"grid-card\">\r\n                                    <div className=\"full-size\">\r\n                                        <span className=\"card-title\">INTERACTIVE WEATHER</span>\r\n                                        <div className=\"colour-card blue pale-blue-shadow full-size\">\r\n                                            <InteractiveWeather wind={wind} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"grid-card\">\r\n                                    <div className=\"left-padding full-size\">\r\n                                        <span className=\"card-title\">WIND</span>\r\n                                        <div className=\"full-size\">\r\n                                            {Cards}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"grid-card\">\r\n                                <div className=\"left-padding full-size\">\r\n                                        <span className=\"card-title\">TIDE</span>\r\n                                        <div className=\"colour-card orange full-size\">\r\n                                            {/* <TideCard tide={tide} /> */}\r\n                                            <span> Coming soon... </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n        )\r\n        } else {\r\n            return(\r\n              <div className=\"error-modal\">\r\n                  <div className=\"error-modal-inner\">\r\n                      <span className=\"oops-error\">Oops,</span>\r\n                      <span>Something went wrong. Try again?</span>\r\n                      <button>TRY AGAIN</button>\r\n                  </div>\r\n              </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default HomeContent;"]},"metadata":{},"sourceType":"module"}