{"ast":null,"code":"var _jsxFileName = \"F:\\\\JS\\\\goring_wind\\\\frontend\\\\src\\\\components\\\\HomeContent\\\\HomeContent.js\";\nimport React, { Component } from 'react';\nimport './HomeContent.css';\nimport WindCard from './WindCard';\nimport apiContext from '../../context/api-context';\n\nclass HomeContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wind: null,\n      isLoaded: null,\n      api: null\n    };\n  }\n\n  componentDidMount() {\n    this.state.api = this.context;\n    const api = this.state.api;\n    const t_wind = null;\n    const xhr = new XMLHttpRequest();\n    var params = {\n      token: api.token\n    };\n\n    xhr.onload = () => {\n      if (xhr.status == 200) {\n        var data = JSON.parse(xhr.response);\n        t_wind;\n      } else {// failed\n      }\n    };\n\n    xhr.open('POST', 'http://192.168.0.100:5000/weather/getCurrent?type=wind');\n    xhr.send(JSON.stringify(params));\n    this.setState({\n      wind: t_wind,\n      isLoaded: true\n    });\n  }\n\n  render() {\n    const wind = this.state.wind;\n    console.log(wind);\n\n    if (this.state.isLoaded) {\n      var Cards = this.state.wind.map((host, index) => React.createElement(WindCard, {\n        StationName: host[index].name,\n        StationLocation: host.location,\n        StationDistance: host.distance,\n        CurrentSpeed: host.speed,\n        Direction: host.direction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n      return React.createElement(\"main\", {\n        id: \"layout-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-container content-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"INTERACTIVE WEATHER\"), React.createElement(\"div\", {\n        className: \"colour-card blue full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"grid-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-padding full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"WIND\"), React.createElement(\"div\", {\n        className: \"full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, Cards))), React.createElement(\"div\", {\n        className: \"grid-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-padding full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"TIDE\"), React.createElement(\"div\", {\n        className: \"colour-card orange full-size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nHomeContent.contextType = apiContext;\nexport default HomeContent;","map":{"version":3,"sources":["F:/JS/goring_wind/frontend/src/components/HomeContent/HomeContent.js"],"names":["React","Component","WindCard","apiContext","HomeContent","constructor","props","state","wind","isLoaded","api","componentDidMount","context","t_wind","xhr","XMLHttpRequest","params","token","onload","status","data","JSON","parse","response","open","send","stringify","setState","render","console","log","Cards","map","host","index","name","location","distance","speed","direction","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;;AAGA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAGhCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTC,MAAAA,GAAG,EAAE;AAHI,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWG,GAAX,GAAiB,KAAKE,OAAtB;AACA,UAAMF,GAAG,GAAG,KAAKH,KAAL,CAAWG,GAAvB;AAEA,UAAMG,MAAM,GAAG,IAAf;AACA,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AAEA,QAAIC,MAAM,GAAG;AACTC,MAAAA,KAAK,EAAEP,GAAG,CAACO;AADF,KAAb;;AAIAH,IAAAA,GAAG,CAACI,MAAJ,GAAa,MAAM;AACf,UAAIJ,GAAG,CAACK,MAAJ,IAAc,GAAlB,EAAuB;AACnB,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,QAAf,CAAX;AACAV,QAAAA,MAAM;AAET,OAJD,MAIO,CACH;AACH;AACJ,KARD;;AAUAC,IAAAA,GAAG,CAACU,IAAJ,CAAS,MAAT,EAAiB,wDAAjB;AAEAV,IAAAA,GAAG,CAACW,IAAJ,CAASJ,IAAI,CAACK,SAAL,CAAeV,MAAf,CAAT;AAEA,SAAKW,QAAL,CAAc;AACVnB,MAAAA,IAAI,EAAEK,MADI;AAEVJ,MAAAA,QAAQ,EAAE;AAFA,KAAd;AAKD;;AAEHmB,EAAAA,MAAM,GAAE;AAAA,UACIpB,IADJ,GACa,KAAKD,KADlB,CACIC,IADJ;AAEJqB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;;AAEA,QAAI,KAAKD,KAAL,CAAWE,QAAf,EAAyB;AAErB,UAAIsB,KAAK,GACL,KAAKxB,KAAL,CAAWC,IAAX,CAAgBwB,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAChB,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAED,IAAI,CAACC,KAAD,CAAJ,CAAYC,IAAnC;AAAyC,QAAA,eAAe,EAAEF,IAAI,CAACG,QAA/D;AAAyE,QAAA,eAAe,EAAEH,IAAI,CAACI,QAA/F;AAAyG,QAAA,YAAY,EAAEJ,IAAI,CAACK,KAA5H;AAAmI,QAAA,SAAS,EAAEL,IAAI,CAACM,SAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMJ,aACQ;AAAM,QAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ,EASI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,KADL,CAFJ,CADJ,CATJ,EAiBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,EAEK;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFL,CADH,CAjBJ,CADJ,CADJ,CADR;AAgCC,KAxCD,MAwCO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;AACJ;;AA5F+B;;AAA9B3B,W,CACKoC,W,GAAcrC,U;AA8FzB,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './HomeContent.css'\r\nimport WindCard from './WindCard';\r\n\r\nimport apiContext from '../../context/api-context';\r\n\r\n\r\nclass HomeContent extends Component {\r\n    static contextType = apiContext;\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            wind: null,\r\n            isLoaded: null,\r\n            api: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.api = this.context;\r\n        const api = this.state.api;\r\n\r\n        const t_wind = null;\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        var params = {\r\n            token: api.token\r\n        } \r\n\r\n        xhr.onload = () => {\r\n            if (xhr.status == 200) {\r\n                var data = JSON.parse(xhr.response);\r\n                t_wind\r\n\r\n            } else {\r\n                // failed\r\n            }\r\n        };\r\n\r\n        xhr.open('POST', 'http://192.168.0.100:5000/weather/getCurrent?type=wind');\r\n\r\n        xhr.send(JSON.stringify(params));\r\n\r\n        this.setState({\r\n            wind: t_wind,\r\n            isLoaded: true\r\n        });\r\n    \r\n      }\r\n\r\n    render(){\r\n        const { wind } = this.state\r\n        console.log(wind)\r\n\r\n        if (this.state.isLoaded) {    \r\n\r\n            var Cards = (                                    \r\n                this.state.wind.map((host, index) => (\r\n                    <WindCard StationName={host[index].name} StationLocation={host.location} StationDistance={host.distance} CurrentSpeed={host.speed} Direction={host.direction}/>\r\n                ))\r\n            )\r\n\r\n        return (\r\n                <main id=\"layout-container\">\r\n                    <div id=\"content\">\r\n                        <div className=\"grid-container content-container\">\r\n                            <div className=\"grid-card\">\r\n                                <div className=\"full-size\">\r\n                                    <span className=\"card-title\">INTERACTIVE WEATHER</span>\r\n                                    <div className=\"colour-card blue full-size\">\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid-card\">\r\n                                <div className=\"left-padding full-size\">\r\n                                    <span className=\"card-title\">WIND</span>\r\n                                    <div className=\"full-size\">\r\n                                        {Cards}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid-card\">\r\n                               <div className=\"left-padding full-size\">\r\n                                    <span className=\"card-title\">TIDE</span>\r\n                                    <div className=\"colour-card orange full-size\">\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n        )\r\n        } else {\r\n            return(<div>Loading...</div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default HomeContent;"]},"metadata":{},"sourceType":"module"}