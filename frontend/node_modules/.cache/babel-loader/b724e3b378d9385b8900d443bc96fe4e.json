{"ast":null,"code":"var _jsxFileName = \"G:\\\\JS\\\\goring_wind\\\\frontend\\\\src\\\\components\\\\HomeContent\\\\InteractiveWeather.js\";\nimport React, { Component } from 'react';\nimport './InteractiveWeather.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\nconst L = require('leaflet');\n\nclass InteractiveWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapCenter: [50.802897, -0.440456],\n      zoomLevel: 12,\n      wind: props.wind,\n      markers: [],\n      currentMarker: null\n    };\n  }\n\n  componentDidMount() {\n    this.updateMarkers();\n    this.leafletElement.setIconAngle(\"90\");\n  }\n\n  updateMarkers() {\n    for (var i = 0; i < this.state.wind.length; i++) {\n      this.state.markers.push({\n        position: [this.state.wind[i].position[0], this.state.wind[i].position[1]],\n        all: this.state.wind[i]\n      });\n    }\n  }\n\n  handleMarkerClick(e) {\n    this.setState({\n      currentMarker: e.target.options.data\n    });\n  }\n\n  render() {\n    const stamenTonerTiles = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n    const stamenTonerAttr = '&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\n    return React.createElement(Map, {\n      center: this.state.mapCenter,\n      zoom: this.state.zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: stamenTonerAttr,\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), this.state.markers.map((data, idx) => React.createElement(Marker, {\n      icon: new L.Icon({\n        iconUrl: require('./navigation.svg'),\n        iconSize: new L.Point(60, 75),\n        className: 'leaflet-div-icon'\n      }),\n      key: `marker-${idx}`,\n      position: data.position,\n      data: data.all,\n      onClick: this.handleMarkerClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"goringwind.uk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Website Link\"), data.all.direction, \", \", data.all.speed, \" Kt\"))));\n  }\n\n}\n\nexport default InteractiveWeather;","map":{"version":3,"sources":["G:/JS/goring_wind/frontend/src/components/HomeContent/InteractiveWeather.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","Control","L","require","InteractiveWeather","constructor","props","state","mapCenter","zoomLevel","wind","markers","currentMarker","componentDidMount","updateMarkers","leafletElement","setIconAngle","i","length","push","position","all","handleMarkerClick","e","setState","target","options","data","render","stamenTonerTiles","stamenTonerAttr","map","idx","Icon","iconUrl","iconSize","Point","className","bind","direction","speed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './InteractiveWeather.css';\r\n\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport Control from 'react-leaflet-control';\r\nconst L = require('leaflet');\r\n\r\nclass InteractiveWeather extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapCenter: [50.802897, -0.440456],\r\n            zoomLevel: 12,\r\n            wind: props.wind,\r\n            markers: [],\r\n            currentMarker: null\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.updateMarkers();\r\n        this.leafletElement.setIconAngle(\"90\");\r\n    }\r\n  \r\n    updateMarkers() {\r\n        for (var i = 0; i < this.state.wind.length; i++) {\r\n            this.state.markers.push( { \r\n                position: [\r\n                this.state.wind[i].position[0],\r\n                this.state.wind[i].position[1]\r\n                ],\r\n                all: this.state.wind[i]\r\n            });\r\n        }        \r\n    }\r\n\r\n    handleMarkerClick(e) {\r\n        this.setState({\r\n            currentMarker: e.target.options.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const stamenTonerTiles = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n        const stamenTonerAttr = '&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\r\n\r\n        return (\r\n                <Map\r\n                center={this.state.mapCenter}\r\n                zoom={this.state.zoomLevel}\r\n            >\r\n                <TileLayer\r\n                    attribution={stamenTonerAttr}\r\n                    url={stamenTonerTiles}\r\n                />\r\n                \r\n                {this.state.markers.map((data, idx) => \r\n                    <Marker \r\n                        icon={new L.Icon({\r\n                            iconUrl: require('./navigation.svg'),\r\n                            iconSize: new L.Point(60, 75),\r\n                            className: 'leaflet-div-icon'\r\n                        })}\r\n                        key={`marker-${idx}`} \r\n                        position={data.position} \r\n                        data={data.all}\r\n                        onClick={this.handleMarkerClick.bind(this)}\r\n                    > \r\n                    \r\n                    <Popup>\r\n                        <a href=\"goringwind.uk\">Website Link</a>\r\n                        {data.all.direction}, {data.all.speed} Kt\r\n                    </Popup>\r\n                    </Marker>\r\n                )}\r\n            </Map>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default InteractiveWeather;"]},"metadata":{},"sourceType":"module"}