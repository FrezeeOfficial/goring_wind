{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gitihub Repos\\\\goring_wind\\\\frontend\\\\src\\\\components\\\\HomeContent\\\\InteractiveWeather.js\";\nimport React, { Component } from 'react';\nimport './InteractiveWeather.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\nconst L = require('leaflet');\n\nclass InteractiveWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapCenter: [50.802897, -0.440456],\n      zoomLevel: 12,\n      wind: props.wind,\n      markers: [],\n      currentMarker: null\n    };\n  }\n\n  componentDidMount() {\n    this.updateMarkers();\n    console.log(this.state.markers[0].all);\n  }\n\n  evalutate_locaation(data) {\n    var c;\n    var s;\n\n    if (data.speed > 30) {\n      c = \"High Winds\";\n      s = \"Advanced+\";\n    }\n\n    if (data.speed < 30) {\n      c = \"Medium Winds\";\n      s = \"Intermediate\";\n    }\n\n    if (data.speed < 15) {\n      c = \"Safe Winds\";\n      s = \"Safe for most\";\n    }\n\n    return {\n      \"conditions\": c,\n      \"skill_level\": s\n    };\n  }\n\n  updateMarkers() {\n    for (var i = 0; i < this.state.wind.length; i++) {\n      console.log(this.state.wind[i]);\n\n      if (this.state.wind[i].status) {} else {\n        this.state.markers.push({\n          position: [this.state.wind[i].position[0], this.state.wind[i].position[1]],\n          all: this.state.wind[i],\n          evalutation: this.evalutate_locaation(this.state.wind[i])\n        });\n      }\n    }\n  }\n\n  handleMarkerClick(e) {\n    this.setState({\n      currentMarker: e.target.options.data\n    });\n  }\n\n  render() {\n    const stamenTonerTiles = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n    const stamenTonerAttr = '&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> & <a href=&quot;http://C6100M1.FRZE.NET/;>C6100M1.FRZE.NET</a> contributors';\n    /* \r\n        C6100 Api will work by getting wind forecast data and converting it into tiles with a colour gradient and add as an overlay on top of openstreetmap\r\n    */\n\n    return /*#__PURE__*/React.createElement(Map, {\n      center: this.state.mapCenter,\n      zoom: this.state.zoomLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: stamenTonerAttr,\n      url: stamenTonerTiles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), this.state.markers.map((data, idx) => /*#__PURE__*/React.createElement(Marker, {\n      icon: new L.Icon({\n        iconUrl: require('./navigation.svg'),\n        iconSize: new L.Point(60, 75),\n        className: 'leaflet-div-icon'\n      }),\n      key: `marker-${idx}`,\n      position: data.position,\n      data: data.all,\n      onClick: this.handleMarkerClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wind-popup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"wind-popup-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, data.all.location), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, \"OWNED BY GW\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"wind-popup-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, \"WIND SPEED: \", data.all.speed, \" KN\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, \"WIND DIRECTION: \", data.all.direction), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, \"WIND GUST: UNKNOWN\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, \"TIDE: UNKNOWN\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, \"SWELL: UNKNOWN\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wind-popup-body wind-popup-body-overall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }, \"Skill: \", data.evalutation.skill_level), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"Conditions: \", data.evalutation.conditions)))))))));\n  }\n\n}\n\nexport default InteractiveWeather;","map":{"version":3,"sources":["D:/Gitihub Repos/goring_wind/frontend/src/components/HomeContent/InteractiveWeather.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","Control","L","require","InteractiveWeather","constructor","props","state","mapCenter","zoomLevel","wind","markers","currentMarker","componentDidMount","updateMarkers","console","log","all","evalutate_locaation","data","c","s","speed","i","length","status","push","position","evalutation","handleMarkerClick","e","setState","target","options","render","stamenTonerTiles","stamenTonerAttr","map","idx","Icon","iconUrl","iconSize","Point","className","bind","location","direction","skill_level","conditions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './InteractiveWeather.css';\r\n\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport Control from 'react-leaflet-control';\r\nconst L = require('leaflet');\r\n\r\nclass InteractiveWeather extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapCenter: [50.802897, -0.440456],\r\n            zoomLevel: 12,\r\n            wind: props.wind,\r\n            markers: [],\r\n            currentMarker: null\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.updateMarkers();\r\n        console.log(this.state.markers[0].all)\r\n    }\r\n\r\n    evalutate_locaation(data){\r\n        var c;\r\n        var s;\r\n\r\n        if (data.speed > 30) {\r\n            c  = \"High Winds\"\r\n            s = \"Advanced+\"\r\n        } if (data.speed < 30 ){\r\n            c  = \"Medium Winds\"\r\n            s = \"Intermediate\"\r\n        } if (data.speed < 15 ){\r\n            c  = \"Safe Winds\"\r\n            s = \"Safe for most\"\r\n        }\r\n\r\n        return (\r\n            {\r\n                \"conditions\": c,\r\n                \"skill_level\": s\r\n            }\r\n        )\r\n    }\r\n  \r\n    updateMarkers() {\r\n        for (var i = 0; i < this.state.wind.length; i++) {\r\n            console.log(this.state.wind[i])\r\n            if (this.state.wind[i].status) {\r\n\r\n            } else {\r\n            this.state.markers.push( { \r\n                position: [\r\n                this.state.wind[i].position[0],\r\n                this.state.wind[i].position[1]\r\n                ],\r\n                all: this.state.wind[i],\r\n                evalutation: this.evalutate_locaation(this.state.wind[i])\r\n            });\r\n        }\r\n        }        \r\n    }\r\n\r\n    handleMarkerClick(e) {\r\n        this.setState({\r\n            currentMarker: e.target.options.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const stamenTonerTiles = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n        const stamenTonerAttr = '&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> & <a href=&quot;http://C6100M1.FRZE.NET/;>C6100M1.FRZE.NET</a> contributors';\r\n\r\n        /* \r\n            C6100 Api will work by getting wind forecast data and converting it into tiles with a colour gradient and add as an overlay on top of openstreetmap\r\n        */\r\n\r\n        return (\r\n                <Map\r\n                center={this.state.mapCenter}\r\n                zoom={this.state.zoomLevel}\r\n            >\r\n                <TileLayer\r\n                    attribution={stamenTonerAttr}\r\n                    url={stamenTonerTiles}\r\n                />\r\n                \r\n                {this.state.markers.map((data, idx) => \r\n                    <Marker \r\n                        icon={new L.Icon({\r\n                            iconUrl: require('./navigation.svg'),\r\n                            iconSize: new L.Point(60, 75),\r\n                            className: 'leaflet-div-icon'\r\n                        })}\r\n                        key={`marker-${idx}`} \r\n                        position={data.position} \r\n                        data={data.all}\r\n                        onClick={this.handleMarkerClick.bind(this)}\r\n                    > \r\n                    \r\n                    <Popup>\r\n                        <div className=\"wind-popup\">\r\n                            <div class=\"wind-popup-header\">\r\n                                <h1>{data.all.location}</h1>\r\n                                <h2>OWNED BY GW</h2>\r\n                            </div>\r\n                            <div class=\"wind-popup-body\">\r\n                                <ul>\r\n                                    <li>WIND SPEED: {data.all.speed} KN</li>\r\n                                    <li>WIND DIRECTION: {data.all.direction}</li>\r\n                                    <li>WIND GUST: UNKNOWN</li>\r\n                                    <br></br>\r\n                                    <li>TIDE: UNKNOWN</li>\r\n                                    <li>SWELL: UNKNOWN</li>\r\n                                </ul>\r\n                                <div className=\"wind-popup-body wind-popup-body-overall\">\r\n                                <ul>\r\n                                    <li>Skill: {data.evalutation.skill_level}</li>\r\n                                    <li>Conditions: {data.evalutation.conditions}</li>\r\n                                </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Popup>\r\n                    </Marker>\r\n                )}\r\n            </Map>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default InteractiveWeather;"]},"metadata":{},"sourceType":"module"}