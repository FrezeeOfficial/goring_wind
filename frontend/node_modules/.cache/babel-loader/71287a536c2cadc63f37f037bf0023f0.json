{"ast":null,"code":"var _jsxFileName = \"F:\\\\JS\\\\goring_wind\\\\frontend\\\\src\\\\components\\\\HomeContent\\\\InteractiveWeather.js\";\nimport React, { Component } from 'react';\nimport './InteractiveWeather.css';\nimport { Map, TileLayer, Marker, Popup, L } from 'react-leaflet'; // import Control from 'react-leaflet-control';\n\nclass InteractiveWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.pointerIcon = new L.Icon({\n      iconUrl: '../assets/pointerIcon.svg',\n      iconRetinaUrl: '../assets/pointerIcon.svg',\n      iconAnchor: [5, 55],\n      popupAnchor: [10, -44],\n      iconSize: [25, 55],\n      shadowUrl: '../assets/marker-shadow.png',\n      shadowSize: [68, 95],\n      shadowAnchor: [20, 92]\n    });\n    this.state = {\n      mapCenter: [50.802897, -0.440456],\n      zoomLevel: 12,\n      wind: props.wind,\n      markers: []\n    };\n  }\n\n  componentDidMount() {\n    for (var i = 0; i < this.state.wind.length; i++) {\n      this.state.markers.push({\n        position: [this.state.wind[i].position[0], this.state.wind[i].position[1]],\n        all: this.state.wind[i]\n      });\n    }\n  }\n\n  render() {\n    const stamenTonerTiles = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n    const stamenTonerAttr = '&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\n    const iconUrl = './station-icon.png';\n    return React.createElement(Map, {\n      center: this.state.mapCenter,\n      zoom: this.state.zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: stamenTonerAttr,\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), this.state.markers.map((data, idx) => React.createElement(Marker, {\n      key: `marker-${idx}`,\n      position: data.position,\n      iconUrl: iconUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InteractiveWeather;","map":{"version":3,"sources":["F:/JS/goring_wind/frontend/src/components/HomeContent/InteractiveWeather.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","L","InteractiveWeather","constructor","props","pointerIcon","Icon","iconUrl","iconRetinaUrl","iconAnchor","popupAnchor","iconSize","shadowUrl","shadowSize","shadowAnchor","state","mapCenter","zoomLevel","wind","markers","componentDidMount","i","length","push","position","all","render","stamenTonerTiles","stamenTonerAttr","map","data","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0BAAP;AAEA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,CAAxC,QAAgD,eAAhD,C,CACA;;AAEA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AAEvCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAuBnBC,WAvBmB,GAuBL,IAAIJ,CAAC,CAACK,IAAN,CAAW;AACrBC,MAAAA,OAAO,EAAE,2BADY;AAErBC,MAAAA,aAAa,EAAE,2BAFM;AAGrBC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,CAHS;AAIrBC,MAAAA,WAAW,EAAE,CAAC,EAAD,EAAK,CAAC,EAAN,CAJQ;AAKrBC,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CALW;AAMrBC,MAAAA,SAAS,EAAE,6BANU;AAOrBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAPS;AAQrBC,MAAAA,YAAY,EAAE,CAAC,EAAD,EAAK,EAAL;AARO,KAAX,CAvBK;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,CAAC,QAAb,CADF;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,IAAI,EAAEd,KAAK,CAACc,IAHH;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,KAAL,CAAWG,IAAX,CAAgBI,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,WAAKN,KAAL,CAAWI,OAAX,CAAmBI,IAAnB,CAAyB;AACrBC,QAAAA,QAAQ,EAAE,CACV,KAAKT,KAAL,CAAWG,IAAX,CAAgBG,CAAhB,EAAmBG,QAAnB,CAA4B,CAA5B,CADU,EAEV,KAAKT,KAAL,CAAWG,IAAX,CAAgBG,CAAhB,EAAmBG,QAAnB,CAA4B,CAA5B,CAFU,CADW;AAKrBC,QAAAA,GAAG,EAAE,KAAKV,KAAL,CAAWG,IAAX,CAAgBG,CAAhB;AALgB,OAAzB;AAOH;AACJ;;AAcDK,EAAAA,MAAM,GAAG;AACL,UAAMC,gBAAgB,GAAG,oDAAzB;AACA,UAAMC,eAAe,GAAG,oFAAxB;AACA,UAAMrB,OAAO,GAAG,oBAAhB;AAEA,WACQ,oBAAC,GAAD;AACA,MAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWC,SADnB;AAEA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,SAAD;AACI,MAAA,WAAW,EAAEW,eADjB;AAEI,MAAA,GAAG,EAAED,gBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAeC,KAAKZ,KAAL,CAAWI,OAAX,CAAmBU,GAAnB,CAAuB,CAACC,IAAD,EAAOC,GAAP,KACpB,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,UAASA,GAAI,EAA3B;AAA8B,MAAA,QAAQ,EAAED,IAAI,CAACN,QAA7C;AAAuD,MAAA,OAAO,EAAEjB,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAfD,CADR;AAuBH;;AAjEsC;;AAoE3C,eAAeL,kBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './InteractiveWeather.css';\r\n\r\nimport { Map, TileLayer, Marker, Popup, L} from 'react-leaflet';\r\n// import Control from 'react-leaflet-control';\r\n\r\nclass InteractiveWeather extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapCenter: [50.802897, -0.440456],\r\n            zoomLevel: 12,\r\n            wind: props.wind,\r\n            markers: []\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n        for (var i = 0; i < this.state.wind.length; i++) {\r\n            this.state.markers.push( { \r\n                position: [\r\n                this.state.wind[i].position[0],\r\n                this.state.wind[i].position[1]\r\n                ],\r\n                all: this.state.wind[i]\r\n            });\r\n        }\r\n    }\r\n\r\n    pointerIcon = new L.Icon({\r\n        iconUrl: '../assets/pointerIcon.svg',\r\n        iconRetinaUrl: '../assets/pointerIcon.svg',\r\n        iconAnchor: [5, 55],\r\n        popupAnchor: [10, -44],\r\n        iconSize: [25, 55],\r\n        shadowUrl: '../assets/marker-shadow.png',\r\n        shadowSize: [68, 95],\r\n        shadowAnchor: [20, 92],\r\n      })\r\n      \r\n\r\n    render() {\r\n        const stamenTonerTiles = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n        const stamenTonerAttr = '&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\r\n        const iconUrl = './station-icon.png';\r\n\r\n        return (\r\n                <Map\r\n                center={this.state.mapCenter}\r\n                zoom={this.state.zoomLevel}\r\n            >\r\n                <TileLayer\r\n                    attribution={stamenTonerAttr}\r\n                    url={stamenTonerTiles}\r\n                />\r\n\r\n                {/* <Control position=\"topright\">\r\n                    <div class=\"map-control\">\r\n                        \r\n                    </div>\r\n                </Control> */}\r\n                \r\n                {this.state.markers.map((data, idx) => \r\n                    <Marker key={`marker-${idx}`} position={data.position} iconUrl={iconUrl} >\r\n\r\n                    </Marker>\r\n                )}\r\n            </Map>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default InteractiveWeather;"]},"metadata":{},"sourceType":"module"}